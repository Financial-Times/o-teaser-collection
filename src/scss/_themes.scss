@mixin oTeaserCollectionNumbered() {
	.o-teaser-collection__items {
		counter: o-teaser-collection-items;
	}

	.o-teaser-collection__item {
		counter-increment: o-teaser-collection-items;
		padding-left: 28px;
		position: relative;

		&:before {
			@include font-size(28, 28);
			font-family: $o-typography-serif-display;
			content: counter(o-teaser-collection-items);
			position: absolute;
			top: 0;
			left: 0;
		}
	}
}

@mixin oTeaserCollectionSpecial() {
	position: relative;
	border-top: 0;
	margin-bottom: 50px;

	&:after {
		content: '';
		position: absolute;
		top: 0px;
		left: 50%;
		z-index: -1;
		width: 100vw;
		height: 100%;
		background: $_o-teaser-collection-color-special-bg;
		transform: translateX(-50%);
	}
}

@mixin oTeaserCollectionBigStory() {
	.o-teaser-collection__heading {
		z-index: 1;
		position: absolute;

		&:before {
			display: none;
		}
		&:after {
			width: 100%;
		}

		@include oGridRespondTo(L) {
			width: 32.5%;
		}
	}

	.o-teaser-collection__related {
		margin: 10px 0 0;

		// Modify o-teaser: remove the related teaser borders when stacked
		.o-teaser {
			@include oGridRespondTo(M) {
				border-bottom-width: 0;
			}
			@include oGridRespondTo(L) {
				border-bottom-width: 1px;
			}
		}
	}
}

@mixin oTeaserCollectionHorizontal() {

	// Change flex direction from column
	.o-teaser-collection__items {
		flex-direction: row;
	}

	// Change positioning of numbers to be on top
	&.o-teaser-collection--numbered {
		.o-teaser-collection__item {
			padding-left: inherit;
			padding-top: 28px;
			padding-right: 16px;
			&:after {
				display: none;
				content: '';
				position: absolute;
				top: 0;
				right: 8px;
				border-right: 1px solid $_o-teaser-collection-color-thin-border;
				height: calc(100% - 15px);
			}
		}

		// Handle when to show vertical rule by breakpoint
		@include oGridRespondTo($from: S, $until: M) {
			.o-teaser-collection__item:nth-of-type(odd):after {
				display: unset;
			}
		}

		@include oGridRespondTo($from: M, $until: XL) {
			.o-teaser-collection__item {
				&:nth-of-type(3n+1),
				&:nth-of-type(3n+2) {
					&:after {
						display: unset;
					}
				}
			}
		}

		@include oGridRespondTo(XL) {
			.o-teaser-collection__item:after {
				display: unset;
			}
			.o-teaser-collection__item:last-of-type:after {
				display: none;
			}
		}

	}
}

@mixin oTeaserCollectionMidSlice {
	border-bottom: 1px solid $_o-teaser-collection-color-thin-border;
	border-top: 1px solid $_o-teaser-collection-color-thin-border;
	padding: 20px 0 0;
}

@mixin oTeaserCollectionTopStandalone {
	border-bottom: 1px solid $_o-teaser-collection-color-thin-border;

	// Modify o-teaser elements
	.o-teaser {
		display: flex;
		flex-direction: column;
	}

	.o-teaser__content {
		flex-grow: 1;
	}

	.o-teaser__related {
		margin: 0;
	}
}

@mixin oTeaserCollectionStream {
	.o-teaser-collection--stream {
		margin: 20px 0 50px;

		.o-teaser-collection__list {
			list-style: none;
			margin: 20px 0 0;
			padding: 0;
		}

		.o-teaser-collection__item {
			position: relative;
		}

		// Modify o-teaser
		.o-teaser__content {
			padding-right: 50px;
		}
	}
}

@mixin oTeaserCollectionFrontPage {
	.o-teaser-collection--top-standalone {
		@include oTeaserCollectionTopStandalone;
	}

	.o-teaser-collection--big-story {
		@include oTeaserCollectionSpecial();
		@include oTeaserCollectionBigStory();
	}

	.o-teaser-collection--mid-slice {
		@include oTeaserCollectionMidSlice;
	}
}
